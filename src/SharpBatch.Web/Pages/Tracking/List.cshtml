@page "{status?}"
@using SharpBatch.Tracking.Abstraction
@inject SharpBatch.Tracking.Abstraction.ISharpBatchTracking trackingProvider


@functions{ 
    [FromRoute]
    public StatusEnum status { get; set; }

    [BindProperty]
    public List<BatchTrackingModel> Data { get; set; }

    public IActionResult OnGet()
    {
        switch (status)
        {
            case StatusEnum.Running:
                Data = trackingProvider.GetRunning();
                break;
            case StatusEnum.Error:
                Data = trackingProvider.GetErrors();
                break;
            case StatusEnum.Stopped:
            case StatusEnum.Started:
                break;

        }

        return Page();
    }
}


<Box>
    @*<BoxHeader>
        <BoxTitle>@status.ToString() Batch Tracking list</BoxTitle>
    </BoxHeader>*@
    <BoxBody>
        <div class="row">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Batch Name</th>
                        <th>Start</th>
                        <th>Machine Name</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Data)
                    {
                        <tr>
                            <td>@item.BatchName</td>
                            <td>@item.StartDate</td>
                            <td>@item.MachineName</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </BoxBody>
</Box>